// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/momper14/edgex-restapp/models"
)

// PostV1AdminRolesCreatedCode is the HTTP code returned for type PostV1AdminRolesCreated
const PostV1AdminRolesCreatedCode int = 201

/*PostV1AdminRolesCreated Created

swagger:response postV1AdminRolesCreated
*/
type PostV1AdminRolesCreated struct {

	/*
	  In: Body
	*/
	Payload models.Role `json:"body,omitempty"`
}

// NewPostV1AdminRolesCreated creates PostV1AdminRolesCreated with default headers values
func NewPostV1AdminRolesCreated() *PostV1AdminRolesCreated {

	return &PostV1AdminRolesCreated{}
}

// WithPayload adds the payload to the post v1 admin roles created response
func (o *PostV1AdminRolesCreated) WithPayload(payload models.Role) *PostV1AdminRolesCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post v1 admin roles created response
func (o *PostV1AdminRolesCreated) SetPayload(payload models.Role) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostV1AdminRolesCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// PostV1AdminRolesUnauthorizedCode is the HTTP code returned for type PostV1AdminRolesUnauthorized
const PostV1AdminRolesUnauthorizedCode int = 401

/*PostV1AdminRolesUnauthorized Unauthorized

swagger:response postV1AdminRolesUnauthorized
*/
type PostV1AdminRolesUnauthorized struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewPostV1AdminRolesUnauthorized creates PostV1AdminRolesUnauthorized with default headers values
func NewPostV1AdminRolesUnauthorized() *PostV1AdminRolesUnauthorized {

	return &PostV1AdminRolesUnauthorized{}
}

// WithPayload adds the payload to the post v1 admin roles unauthorized response
func (o *PostV1AdminRolesUnauthorized) WithPayload(payload string) *PostV1AdminRolesUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post v1 admin roles unauthorized response
func (o *PostV1AdminRolesUnauthorized) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostV1AdminRolesUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// PostV1AdminRolesForbiddenCode is the HTTP code returned for type PostV1AdminRolesForbidden
const PostV1AdminRolesForbiddenCode int = 403

/*PostV1AdminRolesForbidden forbidden

swagger:response postV1AdminRolesForbidden
*/
type PostV1AdminRolesForbidden struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewPostV1AdminRolesForbidden creates PostV1AdminRolesForbidden with default headers values
func NewPostV1AdminRolesForbidden() *PostV1AdminRolesForbidden {

	return &PostV1AdminRolesForbidden{}
}

// WithPayload adds the payload to the post v1 admin roles forbidden response
func (o *PostV1AdminRolesForbidden) WithPayload(payload string) *PostV1AdminRolesForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post v1 admin roles forbidden response
func (o *PostV1AdminRolesForbidden) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostV1AdminRolesForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// PostV1AdminRolesConflictCode is the HTTP code returned for type PostV1AdminRolesConflict
const PostV1AdminRolesConflictCode int = 409

/*PostV1AdminRolesConflict conflict

swagger:response postV1AdminRolesConflict
*/
type PostV1AdminRolesConflict struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewPostV1AdminRolesConflict creates PostV1AdminRolesConflict with default headers values
func NewPostV1AdminRolesConflict() *PostV1AdminRolesConflict {

	return &PostV1AdminRolesConflict{}
}

// WithPayload adds the payload to the post v1 admin roles conflict response
func (o *PostV1AdminRolesConflict) WithPayload(payload string) *PostV1AdminRolesConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post v1 admin roles conflict response
func (o *PostV1AdminRolesConflict) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostV1AdminRolesConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// PostV1AdminRolesInternalServerErrorCode is the HTTP code returned for type PostV1AdminRolesInternalServerError
const PostV1AdminRolesInternalServerErrorCode int = 500

/*PostV1AdminRolesInternalServerError For unknown or unanticipated issues

swagger:response postV1AdminRolesInternalServerError
*/
type PostV1AdminRolesInternalServerError struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewPostV1AdminRolesInternalServerError creates PostV1AdminRolesInternalServerError with default headers values
func NewPostV1AdminRolesInternalServerError() *PostV1AdminRolesInternalServerError {

	return &PostV1AdminRolesInternalServerError{}
}

// WithPayload adds the payload to the post v1 admin roles internal server error response
func (o *PostV1AdminRolesInternalServerError) WithPayload(payload string) *PostV1AdminRolesInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post v1 admin roles internal server error response
func (o *PostV1AdminRolesInternalServerError) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostV1AdminRolesInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
