// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// GetV1PingOKCode is the HTTP code returned for type GetV1PingOK
const GetV1PingOKCode int = 200

/*GetV1PingOK Return value of "pong"

swagger:response getV1PingOK
*/
type GetV1PingOK struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetV1PingOK creates GetV1PingOK with default headers values
func NewGetV1PingOK() *GetV1PingOK {

	return &GetV1PingOK{}
}

// WithPayload adds the payload to the get v1 ping o k response
func (o *GetV1PingOK) WithPayload(payload string) *GetV1PingOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get v1 ping o k response
func (o *GetV1PingOK) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetV1PingOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetV1PingServiceUnavailableCode is the HTTP code returned for type GetV1PingServiceUnavailable
const GetV1PingServiceUnavailableCode int = 503

/*GetV1PingServiceUnavailable For unknown or unanticipated issues

swagger:response getV1PingServiceUnavailable
*/
type GetV1PingServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetV1PingServiceUnavailable creates GetV1PingServiceUnavailable with default headers values
func NewGetV1PingServiceUnavailable() *GetV1PingServiceUnavailable {

	return &GetV1PingServiceUnavailable{}
}

// WithPayload adds the payload to the get v1 ping service unavailable response
func (o *GetV1PingServiceUnavailable) WithPayload(payload string) *GetV1PingServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get v1 ping service unavailable response
func (o *GetV1PingServiceUnavailable) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetV1PingServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
