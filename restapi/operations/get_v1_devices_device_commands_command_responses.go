// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/momper14/edgex-restapp/models"
)

// GetV1DevicesDeviceCommandsCommandOKCode is the HTTP code returned for type GetV1DevicesDeviceCommandsCommandOK
const GetV1DevicesDeviceCommandsCommandOKCode int = 200

/*GetV1DevicesDeviceCommandsCommandOK Ok

swagger:response getV1DevicesDeviceCommandsCommandOK
*/
type GetV1DevicesDeviceCommandsCommandOK struct {

	/*
	  In: Body
	*/
	Payload models.CommandResponse `json:"body,omitempty"`
}

// NewGetV1DevicesDeviceCommandsCommandOK creates GetV1DevicesDeviceCommandsCommandOK with default headers values
func NewGetV1DevicesDeviceCommandsCommandOK() *GetV1DevicesDeviceCommandsCommandOK {

	return &GetV1DevicesDeviceCommandsCommandOK{}
}

// WithPayload adds the payload to the get v1 devices device commands command o k response
func (o *GetV1DevicesDeviceCommandsCommandOK) WithPayload(payload models.CommandResponse) *GetV1DevicesDeviceCommandsCommandOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get v1 devices device commands command o k response
func (o *GetV1DevicesDeviceCommandsCommandOK) SetPayload(payload models.CommandResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetV1DevicesDeviceCommandsCommandOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetV1DevicesDeviceCommandsCommandUnauthorizedCode is the HTTP code returned for type GetV1DevicesDeviceCommandsCommandUnauthorized
const GetV1DevicesDeviceCommandsCommandUnauthorizedCode int = 401

/*GetV1DevicesDeviceCommandsCommandUnauthorized Unauthorized

swagger:response getV1DevicesDeviceCommandsCommandUnauthorized
*/
type GetV1DevicesDeviceCommandsCommandUnauthorized struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetV1DevicesDeviceCommandsCommandUnauthorized creates GetV1DevicesDeviceCommandsCommandUnauthorized with default headers values
func NewGetV1DevicesDeviceCommandsCommandUnauthorized() *GetV1DevicesDeviceCommandsCommandUnauthorized {

	return &GetV1DevicesDeviceCommandsCommandUnauthorized{}
}

// WithPayload adds the payload to the get v1 devices device commands command unauthorized response
func (o *GetV1DevicesDeviceCommandsCommandUnauthorized) WithPayload(payload string) *GetV1DevicesDeviceCommandsCommandUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get v1 devices device commands command unauthorized response
func (o *GetV1DevicesDeviceCommandsCommandUnauthorized) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetV1DevicesDeviceCommandsCommandUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetV1DevicesDeviceCommandsCommandForbiddenCode is the HTTP code returned for type GetV1DevicesDeviceCommandsCommandForbidden
const GetV1DevicesDeviceCommandsCommandForbiddenCode int = 403

/*GetV1DevicesDeviceCommandsCommandForbidden forbidden

swagger:response getV1DevicesDeviceCommandsCommandForbidden
*/
type GetV1DevicesDeviceCommandsCommandForbidden struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetV1DevicesDeviceCommandsCommandForbidden creates GetV1DevicesDeviceCommandsCommandForbidden with default headers values
func NewGetV1DevicesDeviceCommandsCommandForbidden() *GetV1DevicesDeviceCommandsCommandForbidden {

	return &GetV1DevicesDeviceCommandsCommandForbidden{}
}

// WithPayload adds the payload to the get v1 devices device commands command forbidden response
func (o *GetV1DevicesDeviceCommandsCommandForbidden) WithPayload(payload string) *GetV1DevicesDeviceCommandsCommandForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get v1 devices device commands command forbidden response
func (o *GetV1DevicesDeviceCommandsCommandForbidden) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetV1DevicesDeviceCommandsCommandForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetV1DevicesDeviceCommandsCommandNotFoundCode is the HTTP code returned for type GetV1DevicesDeviceCommandsCommandNotFound
const GetV1DevicesDeviceCommandsCommandNotFoundCode int = 404

/*GetV1DevicesDeviceCommandsCommandNotFound The specified resource was not found

swagger:response getV1DevicesDeviceCommandsCommandNotFound
*/
type GetV1DevicesDeviceCommandsCommandNotFound struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetV1DevicesDeviceCommandsCommandNotFound creates GetV1DevicesDeviceCommandsCommandNotFound with default headers values
func NewGetV1DevicesDeviceCommandsCommandNotFound() *GetV1DevicesDeviceCommandsCommandNotFound {

	return &GetV1DevicesDeviceCommandsCommandNotFound{}
}

// WithPayload adds the payload to the get v1 devices device commands command not found response
func (o *GetV1DevicesDeviceCommandsCommandNotFound) WithPayload(payload string) *GetV1DevicesDeviceCommandsCommandNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get v1 devices device commands command not found response
func (o *GetV1DevicesDeviceCommandsCommandNotFound) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetV1DevicesDeviceCommandsCommandNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetV1DevicesDeviceCommandsCommandInternalServerErrorCode is the HTTP code returned for type GetV1DevicesDeviceCommandsCommandInternalServerError
const GetV1DevicesDeviceCommandsCommandInternalServerErrorCode int = 500

/*GetV1DevicesDeviceCommandsCommandInternalServerError For unknown or unanticipated issues

swagger:response getV1DevicesDeviceCommandsCommandInternalServerError
*/
type GetV1DevicesDeviceCommandsCommandInternalServerError struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetV1DevicesDeviceCommandsCommandInternalServerError creates GetV1DevicesDeviceCommandsCommandInternalServerError with default headers values
func NewGetV1DevicesDeviceCommandsCommandInternalServerError() *GetV1DevicesDeviceCommandsCommandInternalServerError {

	return &GetV1DevicesDeviceCommandsCommandInternalServerError{}
}

// WithPayload adds the payload to the get v1 devices device commands command internal server error response
func (o *GetV1DevicesDeviceCommandsCommandInternalServerError) WithPayload(payload string) *GetV1DevicesDeviceCommandsCommandInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get v1 devices device commands command internal server error response
func (o *GetV1DevicesDeviceCommandsCommandInternalServerError) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetV1DevicesDeviceCommandsCommandInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
