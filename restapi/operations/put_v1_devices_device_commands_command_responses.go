// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/momper14/edgex-restapp/models"
)

// PutV1DevicesDeviceCommandsCommandOKCode is the HTTP code returned for type PutV1DevicesDeviceCommandsCommandOK
const PutV1DevicesDeviceCommandsCommandOKCode int = 200

/*PutV1DevicesDeviceCommandsCommandOK Ok

swagger:response putV1DevicesDeviceCommandsCommandOK
*/
type PutV1DevicesDeviceCommandsCommandOK struct {

	/*
	  In: Body
	*/
	Payload models.CommandResponse `json:"body,omitempty"`
}

// NewPutV1DevicesDeviceCommandsCommandOK creates PutV1DevicesDeviceCommandsCommandOK with default headers values
func NewPutV1DevicesDeviceCommandsCommandOK() *PutV1DevicesDeviceCommandsCommandOK {

	return &PutV1DevicesDeviceCommandsCommandOK{}
}

// WithPayload adds the payload to the put v1 devices device commands command o k response
func (o *PutV1DevicesDeviceCommandsCommandOK) WithPayload(payload models.CommandResponse) *PutV1DevicesDeviceCommandsCommandOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put v1 devices device commands command o k response
func (o *PutV1DevicesDeviceCommandsCommandOK) SetPayload(payload models.CommandResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutV1DevicesDeviceCommandsCommandOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// PutV1DevicesDeviceCommandsCommandUnauthorizedCode is the HTTP code returned for type PutV1DevicesDeviceCommandsCommandUnauthorized
const PutV1DevicesDeviceCommandsCommandUnauthorizedCode int = 401

/*PutV1DevicesDeviceCommandsCommandUnauthorized Unauthorized

swagger:response putV1DevicesDeviceCommandsCommandUnauthorized
*/
type PutV1DevicesDeviceCommandsCommandUnauthorized struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewPutV1DevicesDeviceCommandsCommandUnauthorized creates PutV1DevicesDeviceCommandsCommandUnauthorized with default headers values
func NewPutV1DevicesDeviceCommandsCommandUnauthorized() *PutV1DevicesDeviceCommandsCommandUnauthorized {

	return &PutV1DevicesDeviceCommandsCommandUnauthorized{}
}

// WithPayload adds the payload to the put v1 devices device commands command unauthorized response
func (o *PutV1DevicesDeviceCommandsCommandUnauthorized) WithPayload(payload string) *PutV1DevicesDeviceCommandsCommandUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put v1 devices device commands command unauthorized response
func (o *PutV1DevicesDeviceCommandsCommandUnauthorized) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutV1DevicesDeviceCommandsCommandUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// PutV1DevicesDeviceCommandsCommandForbiddenCode is the HTTP code returned for type PutV1DevicesDeviceCommandsCommandForbidden
const PutV1DevicesDeviceCommandsCommandForbiddenCode int = 403

/*PutV1DevicesDeviceCommandsCommandForbidden forbidden

swagger:response putV1DevicesDeviceCommandsCommandForbidden
*/
type PutV1DevicesDeviceCommandsCommandForbidden struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewPutV1DevicesDeviceCommandsCommandForbidden creates PutV1DevicesDeviceCommandsCommandForbidden with default headers values
func NewPutV1DevicesDeviceCommandsCommandForbidden() *PutV1DevicesDeviceCommandsCommandForbidden {

	return &PutV1DevicesDeviceCommandsCommandForbidden{}
}

// WithPayload adds the payload to the put v1 devices device commands command forbidden response
func (o *PutV1DevicesDeviceCommandsCommandForbidden) WithPayload(payload string) *PutV1DevicesDeviceCommandsCommandForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put v1 devices device commands command forbidden response
func (o *PutV1DevicesDeviceCommandsCommandForbidden) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutV1DevicesDeviceCommandsCommandForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// PutV1DevicesDeviceCommandsCommandNotFoundCode is the HTTP code returned for type PutV1DevicesDeviceCommandsCommandNotFound
const PutV1DevicesDeviceCommandsCommandNotFoundCode int = 404

/*PutV1DevicesDeviceCommandsCommandNotFound The specified resource was not found

swagger:response putV1DevicesDeviceCommandsCommandNotFound
*/
type PutV1DevicesDeviceCommandsCommandNotFound struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewPutV1DevicesDeviceCommandsCommandNotFound creates PutV1DevicesDeviceCommandsCommandNotFound with default headers values
func NewPutV1DevicesDeviceCommandsCommandNotFound() *PutV1DevicesDeviceCommandsCommandNotFound {

	return &PutV1DevicesDeviceCommandsCommandNotFound{}
}

// WithPayload adds the payload to the put v1 devices device commands command not found response
func (o *PutV1DevicesDeviceCommandsCommandNotFound) WithPayload(payload string) *PutV1DevicesDeviceCommandsCommandNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put v1 devices device commands command not found response
func (o *PutV1DevicesDeviceCommandsCommandNotFound) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutV1DevicesDeviceCommandsCommandNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// PutV1DevicesDeviceCommandsCommandInternalServerErrorCode is the HTTP code returned for type PutV1DevicesDeviceCommandsCommandInternalServerError
const PutV1DevicesDeviceCommandsCommandInternalServerErrorCode int = 500

/*PutV1DevicesDeviceCommandsCommandInternalServerError For unknown or unanticipated issues

swagger:response putV1DevicesDeviceCommandsCommandInternalServerError
*/
type PutV1DevicesDeviceCommandsCommandInternalServerError struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewPutV1DevicesDeviceCommandsCommandInternalServerError creates PutV1DevicesDeviceCommandsCommandInternalServerError with default headers values
func NewPutV1DevicesDeviceCommandsCommandInternalServerError() *PutV1DevicesDeviceCommandsCommandInternalServerError {

	return &PutV1DevicesDeviceCommandsCommandInternalServerError{}
}

// WithPayload adds the payload to the put v1 devices device commands command internal server error response
func (o *PutV1DevicesDeviceCommandsCommandInternalServerError) WithPayload(payload string) *PutV1DevicesDeviceCommandsCommandInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put v1 devices device commands command internal server error response
func (o *PutV1DevicesDeviceCommandsCommandInternalServerError) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutV1DevicesDeviceCommandsCommandInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
