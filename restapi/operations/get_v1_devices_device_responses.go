// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/momper14/edgex-restapp/models"
)

// GetV1DevicesDeviceOKCode is the HTTP code returned for type GetV1DevicesDeviceOK
const GetV1DevicesDeviceOKCode int = 200

/*GetV1DevicesDeviceOK Ok

swagger:response getV1DevicesDeviceOK
*/
type GetV1DevicesDeviceOK struct {

	/*
	  In: Body
	*/
	Payload *models.Device `json:"body,omitempty"`
}

// NewGetV1DevicesDeviceOK creates GetV1DevicesDeviceOK with default headers values
func NewGetV1DevicesDeviceOK() *GetV1DevicesDeviceOK {

	return &GetV1DevicesDeviceOK{}
}

// WithPayload adds the payload to the get v1 devices device o k response
func (o *GetV1DevicesDeviceOK) WithPayload(payload *models.Device) *GetV1DevicesDeviceOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get v1 devices device o k response
func (o *GetV1DevicesDeviceOK) SetPayload(payload *models.Device) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetV1DevicesDeviceOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetV1DevicesDeviceUnauthorizedCode is the HTTP code returned for type GetV1DevicesDeviceUnauthorized
const GetV1DevicesDeviceUnauthorizedCode int = 401

/*GetV1DevicesDeviceUnauthorized Unauthorized

swagger:response getV1DevicesDeviceUnauthorized
*/
type GetV1DevicesDeviceUnauthorized struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetV1DevicesDeviceUnauthorized creates GetV1DevicesDeviceUnauthorized with default headers values
func NewGetV1DevicesDeviceUnauthorized() *GetV1DevicesDeviceUnauthorized {

	return &GetV1DevicesDeviceUnauthorized{}
}

// WithPayload adds the payload to the get v1 devices device unauthorized response
func (o *GetV1DevicesDeviceUnauthorized) WithPayload(payload string) *GetV1DevicesDeviceUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get v1 devices device unauthorized response
func (o *GetV1DevicesDeviceUnauthorized) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetV1DevicesDeviceUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetV1DevicesDeviceForbiddenCode is the HTTP code returned for type GetV1DevicesDeviceForbidden
const GetV1DevicesDeviceForbiddenCode int = 403

/*GetV1DevicesDeviceForbidden forbidden

swagger:response getV1DevicesDeviceForbidden
*/
type GetV1DevicesDeviceForbidden struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetV1DevicesDeviceForbidden creates GetV1DevicesDeviceForbidden with default headers values
func NewGetV1DevicesDeviceForbidden() *GetV1DevicesDeviceForbidden {

	return &GetV1DevicesDeviceForbidden{}
}

// WithPayload adds the payload to the get v1 devices device forbidden response
func (o *GetV1DevicesDeviceForbidden) WithPayload(payload string) *GetV1DevicesDeviceForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get v1 devices device forbidden response
func (o *GetV1DevicesDeviceForbidden) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetV1DevicesDeviceForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetV1DevicesDeviceNotFoundCode is the HTTP code returned for type GetV1DevicesDeviceNotFound
const GetV1DevicesDeviceNotFoundCode int = 404

/*GetV1DevicesDeviceNotFound The specified resource was not found

swagger:response getV1DevicesDeviceNotFound
*/
type GetV1DevicesDeviceNotFound struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetV1DevicesDeviceNotFound creates GetV1DevicesDeviceNotFound with default headers values
func NewGetV1DevicesDeviceNotFound() *GetV1DevicesDeviceNotFound {

	return &GetV1DevicesDeviceNotFound{}
}

// WithPayload adds the payload to the get v1 devices device not found response
func (o *GetV1DevicesDeviceNotFound) WithPayload(payload string) *GetV1DevicesDeviceNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get v1 devices device not found response
func (o *GetV1DevicesDeviceNotFound) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetV1DevicesDeviceNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetV1DevicesDeviceInternalServerErrorCode is the HTTP code returned for type GetV1DevicesDeviceInternalServerError
const GetV1DevicesDeviceInternalServerErrorCode int = 500

/*GetV1DevicesDeviceInternalServerError For unknown or unanticipated issues

swagger:response getV1DevicesDeviceInternalServerError
*/
type GetV1DevicesDeviceInternalServerError struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetV1DevicesDeviceInternalServerError creates GetV1DevicesDeviceInternalServerError with default headers values
func NewGetV1DevicesDeviceInternalServerError() *GetV1DevicesDeviceInternalServerError {

	return &GetV1DevicesDeviceInternalServerError{}
}

// WithPayload adds the payload to the get v1 devices device internal server error response
func (o *GetV1DevicesDeviceInternalServerError) WithPayload(payload string) *GetV1DevicesDeviceInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get v1 devices device internal server error response
func (o *GetV1DevicesDeviceInternalServerError) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetV1DevicesDeviceInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
